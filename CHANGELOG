==================
 iCal4j - Changes
==================

0.9.12:

 - Redefined parameter and property constants to class instances rather
 than strings. This is done for efficiency where class instances are immutable
 once created. Note: this may cause incompatibilities with existing code!
 
 - fixed bug in parsing periods
 
 - fixed bug in TimeZoneUtils for non-DST timezones
 
 - added support for removal of extraneous newlines between components in the
 default parser implementation (KOrganizer generates such files)
 
 - fixed bug in parsing free time where durations are specified
 
 - Various constants reimplemented as typed instances (as opposed to strings)
 
 NOTE: This may break existing code based on earlier releases! Please check
 your usage of the following classes:
 
 	* net.fortuna.ical4j.model.WeekDay
 	* net.fortuna.ical4j.model.parameter.CuType
 	* net.fortuna.ical4j.model.parameter.Encoding
 	* net.fortuna.ical4j.model.parameter.FbType
 	* net.fortuna.ical4j.model.parameter.PartStat
 	* net.fortuna.ical4j.model.parameter.Range
 	* net.fortuna.ical4j.model.parameter.Related
 	* net.fortuna.ical4j.model.parameter.RelType
 	* net.fortuna.ical4j.model.parameter.Role
 	* net.fortuna.ical4j.model.parameter.Rsvp
 	* net.fortuna.ical4j.model.parameter.Value
 	* net.fortuna.ical4j.model.property.Action
 	* net.fortuna.ical4j.model.property.CalScale
 	* net.fortuna.ical4j.model.property.Clazz
 	* net.fortuna.ical4j.model.property.Method
 	* net.fortuna.ical4j.model.property.Priority
 	* net.fortuna.ical4j.model.property.Status
 	* net.fortuna.ical4j.model.property.Transp
 	
 
 - Applied patch #1170060 by calibre. Provides improvements to retrieval of
 date ranges represented by recurring VEvents.
 
 - documentation updated to conform to XHTML 1.0
 
 - added Base64 encoding/decoding to Attach property
 
 
0.9.11:

 - Better support and usability for recurrence rules. (see
 extensive changes to Recur class)
 
 - Convenience constructors for components VAlarm, VEvent, VFreeBusy, VJournal,
 and VToDo should make it easier to construct standard components.
 
 - Further validation fine-tuning to ensure some properties don't occur where
 not applicable.
 
 - Fixed support for TRANSP property, which was previously being ignored by the
 CalendarBuilder.
 
 
0.9.10:

 - Model classes are now Serializable
 
 - Bug fixes related to VALARMs in VTODOs (thanks twinkle!)
 
 - Added explicit serialVersionUID for Serializable implementors.
 
 - Added use of Log.isDebugEnabled() for performance reasons.
 
 - Added WeekDay class to better represent day patterns in recurrence rules.

 
0.9.9:

 - Separated the calendar parser from the builder to allow different
 parser implementations to be used with iCal4j.
 
 - All properties are now mutable with default constructors.


0.9.8:

 - Added special character escaping and parsing. NOTE: I've provided the ability
 to escape parameter values although I am unsure it is necessary (or allowed) by
 RFC2445.
 
 - Fixed bug whereby CalendarBuilder wasn't reading quoted text correctly in all
 cases.
 

0.9.7:
 
 - Added convenience constructors to model classes (Calendar, Component, Property)
 
 - Initial design of support for RFC 2446 (transform) - NOTE: Not yet functional!
 
 - Fixed bug where builder would hang if calendar streams didn't
 contain an extra whitespace char at EOF


0.9.6:

 - Fixed bug found in some property constructors where was not checking
 VALUE parameter correctly to identify DATE type for date-time values
 
 - Added validating option to CalendarOutputter to indicate whether to
 validate the Calendar before outputting
 
 - Added recurse parameter to calendar and component validate methods
 to indicate whether to validate children
 
 - Added license header to all source files (hence the increase in size
 of the distribution!)


0.9.5:

 - Added UTC flag to date-time properties indicating how date-time values are formatted
	NOTE: This is not provided for all properties as some must be in UTC format.

 - Added convenience methods for creating VTimeZone instances.
 
 
0.9.4:

 - Property and Parameter made abstract classes
 
 - Added getValue() implementation to all Property and Parameter sub-classes
 
 - Fixed FoldingWriter
 
 - Other fixes regarding string representations
 
 
0.9.3:

 - Added commons logging support
 
 - Fixed problem with parsing quoted parameters

 - Finished implementation of Period, Recur types

 - Fix date/date-time parsing to check for VALUE parameter
 
 - Added format method to DurationFormat and UtcOffsetFormat


0.9.2:

 - Interim Release


0.9.1:

 - Interim Release


0.9

 - Initial Release