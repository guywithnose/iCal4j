========================
 iCal4j - Release Notes
========================

 - For a concise description of the goals and directions of iCal4j please
 take a look at docs/index.html.

 - You will find examples of how to use iCal4j at docs/introduction.html
 and throughout the API documentation.

 - Detailed descriptions of changes included in each release may be found
 in the CHANGELOG.
 
 - iCal4j was created with the help of eclipse version 3.0 [http://eclipse.org].
 Note that the project metadata included in the source version of iCal4j may not
 be compatible with prior versions of eclipse.


=================
 Relaxed Parsing
=================

 iCal4j now has the capability to "relax" its parsing rules to enable parsing of
 *.ics files that don't properly conform to the iCalendar specification (RFC2445)
 
 - By specifying the system property "ical4j.unfolding.relaxed=true", iCalendar
 files created with Mozilla Calendar/Sunbird may be correctly unfolded.
 
 Note that I believe this problem is not restricted to Mozilla calendaring
 products, but rather may be caused by UNIX/Linux-based applications relying on the
 default newline character (LF) to fold long lines (KOrganizer also seems to have this
 problem). This is, however, still incorrect as by definition long lines are folded
 using a (CRLF) combination.
 
 
=================
 Redistribution:
=================

If you intend to use and distribute iCal4j in your own project please
follow these very simple guidelines:
 
 - Make a copy of the LICENSE, rename it to LICENSE.iCal4j, and save
 it to the directory where you are re-distributing the iCal4j JAR.
 
 - I don't recommend extracting the iCal4j classes from its JAR and package
 in another JAR along with other classes. It may lead to version incompatibilites
 in the future. Rather I would suggest to include the ical4j.jar in your classpath
 as required.
