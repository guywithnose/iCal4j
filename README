========================
 iCal4j - Release Notes
========================

 - For a concise description of the goals and directions of iCal4j please
 take a look at docs/index.html.

 - You will find examples of how to use iCal4j at docs/introduction.html
 and throughout the API documentation.

 - Detailed descriptions of changes included in each release may be found
 in the CHANGELOG.
 
 - iCal4j was created with the help of eclipse version 3.0 [http://eclipse.org].
 Note that the project metadata included in the source version of iCal4j may not
 be compatible with prior versions of eclipse.


=================
 Relaxed Parsing
=================

 iCal4j now has the capability to "relax" its parsing rules to enable parsing of
 *.ics files that don't properly conform to the iCalendar specification (RFC2445)
 
 - By specifying the system property "ical4j.unfolding.relaxed=true", iCalendar
 files created with Mozilla Calendar/Sunbird may be correctly unfolded.
 
 Note that I believe this problem is not restricted to Mozilla calendaring
 products, but rather may be caused by UNIX/Linux-based applications relying on the
 default newline character (LF) to fold long lines (KOrganizer also seems to have this
 problem). This is, however, still incorrect as by definition long lines are folded
 using a (CRLF) combination.
 
 I've obtained a couple of samples of non-standard iCalendar files that I've included
 in the latest release (0.9.11). There is a Sunbird, phpicalendar, and a KOrganizer
 sample there (open them in Notepad on Windows to see what I mean).

 It seems that phpicalendar and KOrganizer always use LF instead of CRLF, and in
 addition KOrganizer seems to fold all property parameters and values (similar to
 Mozilla Calendar/Sunbird).

 Mozilla Calendar/Sunbird uses CRLF to fold all property parameter/values, however it
 uses just LF to fold long lines (i.e. longer than 75 characters).

 The latest release of iCal4j includes changes to UnfoldingReader that should work
 correctly with Mozilla Calendar/Sunbird, as long as the ical4j.unfolding.relaxed
 system property is set to true.

 KOrganizer/phpicalendar files should also work with the relaxed property, although
 because ALL lines are separated with just LF it also relies on the StreamTokenizer to
 correctly identify LF as a newline on Windows, and CRLF as a newline on UNIX/Linux. The
 API documentation for Java 1.5 says that it does do this, so if you still see problems
 with parsing it could be a bug in the Java implementation.

 Its a shame everyone can't just agree to one
 standard as it would make life much simpler. :)
 

============================
 Pre-Java 1.4 Compatibility
============================

 Choosing Java 1.4 as the minimum required JVM was initially slightly arbitrary, and
 probably based on the fact that most people were using 1.4 as a minimum.

 Since then, however, there are two features of 1.4 I can think of that iCal4j requires:
 	- the URI class;
 	- and the java.util.regex.* package (used in StringUtils).

 If you don't think you will be needing these features in your own code, you may want to
 try compiling iCal4j with JDK 1.4 using the "-target 1.3" option but without specifying
 an alternative "-bootclasspath" option. From what I can tell, this should generate 1.3
 bytecode that you can run on a 1.3 JVM. Note however, that if your code does cause
 iCal4j to load the URI or java.util.regex.* references then it will fail on a 1.3 JVM
 (as these APIs aren't available).

 
=================
 Redistribution:
=================

If you intend to use and distribute iCal4j in your own project please
follow these very simple guidelines:
 
 - Make a copy of the LICENSE, rename it to LICENSE.iCal4j, and save
 it to the directory where you are re-distributing the iCal4j JAR.
 
 - I don't recommend extracting the iCal4j classes from its JAR and package
 in another JAR along with other classes. It may lead to version incompatibilites
 in the future. Rather I would suggest to include the ical4j.jar in your classpath
 as required.
