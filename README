========================
 iCal4j - Release Notes
========================

 - For a concise description of the goals and directions of iCal4j please
 take a look at docs/index.html.

 - You will find examples of how to use iCal4j at docs/introduction.html.

 - Detailed descriptions of changes included in each release may be found
 in the CHANGELOG.
 
 - iCal4j was created with the help of eclipse version 3.0 [http://eclipse.org].
 Note that the project metadata included in the source version of iCal4j may not
 be compatible with prior versions of eclipse.

 - The checkstyle plugin [http://checkstyle.sourceforge.net/] also provided assistance in maintaing good
 coding discipline. (highly recommended!)

 
=================
 Redistribution:
=================

If you intend to use and distribute iCal4j in your own project please
follow these very simple guidelines:
 
 - Make a copy of the LICENSE, rename it to LICENSE.iCal4j, and save
 it to the directory where you are re-distributing the iCal4j JAR.
 
 - Please don't extract the iCal4j classes from its JAR and package
 in another JAR along with other classes. I've noticed that a number
 of people do this and they are just causing themselves and their
 users no end of trouble.
 
 As a quick example, Google included JavaMail, Apache Crimson and
 other libraries within their googleapi.jar. Now that's fine if you
 intend to use the Google API in isolation, but what if you want to
 include it in a program that uses a different version of JavaMail
 or Crimson elsewhere (including bug fix releases!)? You basically
 have to hack apart the provided JAR to take out all the conflicting
 classes, which may not even be legal.

 Java software is meant to have multiple JARs - I would be very
 surprised these days to see any "application" of merit that doesn't
 contain multiple JARs.